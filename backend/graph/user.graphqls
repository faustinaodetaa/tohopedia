# GraphQL schema example
#
# https://gqlgen.com/getting-started/

directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

# new directive
directive @auth on FIELD_DEFINITION

scalar Any
scalar Date

type User {
  id: ID!
  email: String!
  password: String!
  username: String!
  name: String!
  role: String!
  phone: String!
  gender: String!
  dob: Date!
  picture: String
  balance: Int!
  isBlocked: Boolean!
}



type Query {
  user(id: ID!): User! @goField(forceResolver: true)
  # Add Protected Resource
  protected: String! @goField(forceResolver: true) @auth
  users: [User!]!
  getCurrentUser: User! @goField(forceResolver: true) @auth
}

type Mutation {
  createUser(input: NewUser!): User!
  updateUser(id: ID!, input: UpdateUser!): User!
  auth: AuthOps! @goField(forceResolver: true)
  updateBalance(id:ID!, input: UpdateBalance!): User!
  updateBlockStatus(id: ID!, input: UpdateBlockStatus!): User!
}

input NewUser{
  email: String!
  password: String!
  name: String!
}

input UpdateUser{
  email: String!
  picture:String!
  name: String!
  dob: Date!
  gender: String!
  phone: String!
}

input UpdateBalance{
  balance: Int!
}

input UpdateBlockStatus{
  isBlocked: Boolean!
}


type AuthOps {
  login(email: String!, password: String!): Any! @goField(forceResolver: true)
  register(input: NewUser!): Any! @goField(forceResolver: true)
}
